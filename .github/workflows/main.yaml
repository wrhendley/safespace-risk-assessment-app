name: Flask CI

on:
  push:
    branches: [ main, master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r safespace-backend/requirements.txt

      - name: Print debugging information
        run: |
          echo "Python Version: $(python --version)"
          echo "Working Directory: $(pwd)"
          echo "Contents of Working directory: $(ls -l)"
          echo "Contents of site-packages: $(ls -l venv/lib/python*/site-packages)"

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Create virtual environment
        run: |
          python -m venv venv

      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r safespace-backend/requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          PYTHONPATH=safespace-backend python -m unittest discover -s safespace-backend/tests -p "test_*.py"

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_BACKEND_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_BACKEND_SECRET_KEY }}
          aws-region: us-east-2

      - name: Run deployment command on EC2 via SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=InstanceIds,Values=i-062fae0082e081d5a" \
            --comment "Remote deploy from GitHub Actions" \
            --parameters '{"commands":["cd /home/ec2-user/myapp/safespace-backend", "chmod +x deploy.sh", "./deploy.sh"]}' \
            --region us-east-2 \
            --output text \
            --query "Command.CommandId" > command_id.txt   

      - name: Wait for command to complete
        run: |
          COMMAND_ID=$(cat command_id.txt)
          for i in {1..10}; do
            echo "Checking command status (attempt $i)..."
            STATUS=$(aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id i-062fae0082e081d5a \
              --region us-east-2 \
              --query 'Status' \
              --output text)

            echo "Status: $STATUS"
            if [[ "$STATUS" == "Success" ]]; then
              break
            elif [[ "$STATUS" == "Failed" ]]; then
              echo "Command failed"
              aws ssm get-command-invocation \
                --command-id "$COMMAND_ID" \
                --instance-id i-062fae0082e081d5a \
                --region us-east-2 \
                --output text
              exit 1
            fi
            sleep 5
          done
